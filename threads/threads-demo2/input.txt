If you want to generate a text file with 100MB of random text data instead of binary data, you can use a variety of methods. Here are a few ways to achieve this:

Option 1: Using base64 to Generate Random Text Data (Linux/Mac)

You can use the base64 command to generate random text and repeat it until you reach 100MB. This creates a file with readable text data.

base64 /dev/urandom | head -c 100MB > input.txt

This command does the following:
	1.	base64 /dev/urandom generates random binary data and converts it to base64-encoded text.
	2.	head -c 100MB limits the output to 100MB of data.
	3.	> input.txt writes the output to input.txt.

Option 2: Using shuf to Generate Random Text (Linux/Mac)

If you prefer random lines of text, you can use shuf to shuffle a dictionary and then generate random text.
	1.	First, you need a dictionary of words. You can use the system’s dictionary, or you can download one online.
	2.	Use shuf to shuffle the dictionary and generate lines of random text.

shuf /usr/share/dict/words | head -c 100MB > input.txt

This command will create a file with random words from your system’s dictionary, ensuring that the file grows to 100MB.

Option 3: Use a Simple Script to Generate Text (Python)

You can use a small Python script to generate text data.

import os

# Create or open the file
with open("input.txt", "w") as file:
    text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. " * 1000  # Modify the repeat count to fit the size
    while os.path.getsize("input.txt") < 100 * 1024 * 1024:  # 100MB
        file.write(text)

This script repeatedly writes the phrase “Lorem ipsum dolor sit amet…” until the file reaches 100MB.

⸻

Option 4: Using dd with Text Data (Linux/Mac)

If you want to use dd but write text data, you can redirect text output into a file. For example:

dd if=/dev/urandom | base64 | head -c 100MB > input.txt

Here, base64 will encode random binary data into readable text, and head limits the file size to 100MB.

⸻

Conclusion

Any of these methods will give you a 100MB text file to use. If you want simple random words or structured text like “Lorem Ipsum,” the methods above can accomplish that efficiently. Let me know if you need more details or examples!